// Copyright (2019-2022) Paul Scherrer Institute
// SPDX-License-Identifier: GPL-3.0-or-later

syntax = "proto3";

package JFJochProtoBuf;

enum Compression {
  BSHUF_LZ4 = 0;
  BSHUF_ZSTD = 1;
  BSHUF_ZSTD_RLE = 2;
  NO_COMPRESSION = 3;
}

enum DetectorType {
  JUNGFRAU = 0;
  EIGER = 1;
};

enum DetectorMode {
  CONVERSION = 0;
  RAW = 1;
  PEDESTAL_G0 = 2;
  PEDESTAL_G1 = 3;
  PEDESTAL_G2 = 4;
};

enum FPGAFIFOStatus {
  EMPTY = 0;
  FULL = 1;
  PARTIAL = 2;
}

enum WriterFrameType {
  END_ACQUISITION = 0;
  START_ACQUISITION = 1;
  IMAGE = 2;
}

enum State {
  NOT_INITIALIZED = 0;
  IDLE = 1;
  BUSY = 2;
  PEDESTAL = 3;
  DATA_COLLECTION = 4;
  ERROR = 5;
}

// Utilities
message Empty {
}

message UnitCell {
  double a = 1;
  double b = 2;
  double c = 3;
  double alpha = 4;
  double beta = 5;
  double gamma = 6;
}

message Vector {
  double x = 1;
  double y = 2;
  double z = 3;
}

message RotationSettings {
  double start_angle_deg = 1;
  double angle_incr_per_image_deg = 2;
  Vector rotation_axis = 3;
}

message Plot {
  repeated float x = 1;
  repeated float y = 2;
}

// DiffractionExperiment

message DatasetSettings {
  int64    images_per_trigger = 1;
  int64    ntrigger = 2;

  oneof timing {
    int64  summation = 3;
    int64  image_time_us = 4;
  }

  double   beam_x_pxl = 5;
  double   beam_y_pxl = 6;
  double   detector_distance_mm = 7;
  double   photon_energy_keV = 8;

  string   file_prefix = 9;
  int64    data_file_count = 10;

  Compression compression = 11;

  string   sample_name = 12;
  optional UnitCell unit_cell = 13;
  int64    space_group_number = 14;

  optional Vector scattering_vector = 15;
}

message DetectorSettings {
  int64 frame_time_us = 1;
  optional int64 count_time_us = 2;

  bool use_storage_cells = 3;
  bool use_internal_packet_generator = 4;
  bool collect_raw_data = 5;

  optional int64 pedestal_g0_frames = 6;
  optional int64 pedestal_g1_frames = 7;
  optional int64 pedestal_g2_frames = 8;
}

message DetectorGeometry {
  int64 width_pxl = 1;
  int64 height_pxl = 2;
  repeated int64 pixel0_of_module = 3;
  bool mirror_modules_in_y = 4;
}

message InternalSettings {
  int64 frame_time_pedestalG1G2_us = 1;
  //   uint64 frame_time_pedestalG2_us = 2; reserved
  int64 frame_time_us = 3;
  int64 count_time_us = 4;

  repeated int64 data_stream_modules = 5;
  DetectorGeometry geometry = 6;
  DetectorGeometry raw_geometry = 7;
  DetectorGeometry conv_geometry = 8;

  bool internal_fpga_packet_generator = 9;
  int64 storage_cells = 10;
  int64 storage_cell_start = 11;

  int64 pedestal_g0_frames = 12;
  int64 pedestal_g1_frames = 13;
  int64 pedestal_g2_frames = 14;

  int64 preview_period_us = 15;
  int64 spot_finding_period_us = 16;
  int64 bkg_estimation_period_us = 17;

  DetectorType type = 18;
  DetectorMode mode = 19;
  bool mask_module_edges = 20;
  bool mask_chip_edges = 21;

  int64 base_ipv4_address = 22;
  int64 base_udp_port = 23;

  double low_q = 26;
  double high_q = 27;
  double q_spacing = 28;

  string git_sha1 = 29;
  string git_date = 30;
}


message JungfraujochSettings {
  DatasetSettings dataset = 1;
  InternalSettings internal = 2;
}

// Calibration

message JFPedestal {
  bytes pedestal = 1;
  bytes rms = 2;
  bytes mask = 3;
  int64 time_unix = 4;
  uint64 frames = 5;
}

message JFCalibration {
  uint64 nmodules = 1;
  uint64 nstorage_cells = 2;
  repeated JFPedestal pedestal = 3;
  bytes mask = 4;
}

message JFCalibrationStatistics {
  repeated ModuleStatistics module_statistics = 1;
}

// Receiver

message AcquisitionDeviceStatistics {
  uint64 good_packets = 1;
  uint64 packets_expected_per_module = 2;
  repeated uint64 packets_received_per_module = 3;
  double efficiency = 4;
  uint64 bytes_received = 5;
  uint64 start_timestamp = 6;
  uint64 end_timestamp = 7;
  FPGAStatus fpga_status = 8;
  uint64 nmodules = 9;
  repeated uint64 packet_mask = 10;
  uint64 mask_entries_per_module = 11;
  uint64 packets_expected = 12;
  repeated uint32 timestamp = 13;
  repeated uint32 detector_debug = 14;
  repeated uint64 bunchid = 15;
}

message ReceiverInput {
  JungfraujochSettings jungfraujoch_settings = 1;
  JFCalibration calibration = 2;
  repeated string writer_zmq_address = 3;
}

message ReceiverOutput {
  repeated AcquisitionDeviceStatistics device_statistics = 1;
  uint64 max_receive_delay = 2;
  uint64 compressed_size = 3;
  double compressed_ratio = 4;
  uint64 images_sent = 5;
  uint64 start_time_ms = 6;
  uint64 end_time_ms = 7;
  double efficiency = 8;
  uint64 max_image_number_sent = 9;
  bool cancelled = 10;
  string master_file_name = 11;
  repeated JFPedestal pedestal_result = 12;
}

message ReceiverNetworkConfig {
  repeated string fpga_mac_addr = 1;
}

message ReceiverStatus {
  optional double progress = 1;
  repeated FPGAStatus fpga_status = 2;
}

message ReceiverDataProcessingPlots {
  Plot bkg_estimate = 1;
  Plot radial_int_profile = 2;
  Plot spot_count = 3;
}

// Writer

message WriterInput {
  string zmq_receiver_address = 1;
  string file_prefix = 2;
  int64 file_count = 3;
  int64 width = 4;
  int64 height = 5;
  int64 pixel_depth_bytes = 7;
  bool signed_pxl = 8;
  Compression compression = 9;
  string image_units = 10;
  int64 max_spot_count = 11;
}

message WriterOutput {
  int64 nimages = 1;
  float performance_MBs = 2;
  float performance_Hz = 3;
}

message FacilityMetadata {
  string   source_name_short = 10;
  string   source_name = 11;
  string   instrument_name = 12;
  string   instrument_name_short = 13;
}

message ExperimentGeometryMetadata {
  double beam_x_pxl = 1;
  double beam_y_pxl = 2;
  double distance_mm = 3;
  optional Vector scattering_vector = 4; // (if not set use 0,0,1)
}

message DetectorMetadata {
  DetectorType type = 1;
  int64 width_pxl = 2;
  int64 height_pxl = 3;
  int64 pixel_depth_byte = 4;
  bool signed_pxl = 5;
  Compression compression = 6;
  int64 image_time_us = 7;
  int64 count_time_us = 8;
  int64 overload = 9;
  optional int64 underload = 10;
  int64 ntrigger = 11;
  int64 storage_cell_number = 12;
  double pixel_size_mm = 13;
  double sensor_thickness_um = 14;
  string sensor_material = 15;

  optional double efficiency = 18;
  optional bool collection_cancelled = 19;
  optional int64 max_receiver_delay = 20;
}

message BeamMetadata {
  double energy_kev = 1;                      // energy keV
  optional double   transmission = 2;         // 1.0 = full transmission *
  optional double   total_flux_phs = 3;       // in e/s *
  optional double   beam_size_x_um = 4;       // in micron *
  optional double   beam_size_y_um = 5;       // in micron *
}

message SampleMetadata {
  string name = 1;
  optional UnitCell unit_cell = 2;
  optional int64 space_group = 3;
  optional double temperature_K = 4;
  optional RotationSettings omega = 5;
}

message CalibrationMetadataEntry {
  bytes compressed_bshuf_lz4 = 1;
  string name = 2;
  string units = 3;
}

message CalibrationMetadata {
  optional bytes mask_bshuf_lz4 = 1;
  repeated CalibrationMetadataEntry calibration = 2;
}

message DataProcessingResults {
  repeated IndexerImageOutput image_output = 1;
}

message WriterMetadataInput {
  FacilityMetadata facility_metadata = 1;
  DetectorMetadata detector_metadata = 2;
  BeamMetadata beam_metadata = 3;
  SampleMetadata sample_metadata = 4;
  CalibrationMetadata calibration_metadata = 5;
  ExperimentGeometryMetadata geometry_metadata = 6;
  DataProcessingResults processing_results = 7;

  int64 image_number = 8;
  int64 images_per_trigger = 9;
  uint64 start_time_ms = 10;
  optional uint64 end_time_ms = 11;
  string file_prefix = 12;
  int64 file_count = 13;
}

// Detector
message DetectorModuleConfig {
  uint64 udp_dest_port_1 = 1;
  uint64 udp_dest_port_2 = 2;
  string ipv4_src_addr_1 = 3;
  string ipv4_src_addr_2 = 4;
  string ipv4_dest_addr_1 = 5;
  string ipv4_dest_addr_2 = 6;
  string mac_addr_dest_1 = 7;
  string mac_addr_dest_2 = 8;
}

message DetectorConfig {
  repeated DetectorModuleConfig modules = 1;
}

message DetectorInput {
  int64 modules_num = 1;
  DetectorMode mode = 2;
  int64 num_frames = 3;
  int64 num_triggers = 4;
  int64 storage_cell_number = 5;
  int64 storage_cell_start = 6;
  int64 storage_cell_delay = 7;
  int64 period_us = 9;
  int64 count_time_us = 10;
}

message DetectorOutput {

}

message DetectorStatus {
  State state = 1;
  int64 fw_version = 2;
  int64 server_version = 3;
}

message FPGAStatus {
  uint64 packets_ether = 2;
  uint64 packets_udp = 3;
  uint64 packets_jfjoch = 4;
  uint64 packets_icmp = 5;
  bool fpga_idle = 6;
  uint64 hbm_temp = 7;
  uint64 max_hbm_temp = 8;
  uint64 stalls_hbm = 9;
  uint64 stalls_host = 10;
  bool ethernet_rx_aligned = 11;
  bool ethernet_bad_fcs = 12;
  uint32 full_status_register = 13;
  map<string, FPGAFIFOStatus> fifo_status = 14;
  uint64 max_modules = 15;
  uint32 git_sha1 = 16;
  uint32 mailbox_err_reg = 17;
  uint32 mailbox_status_reg = 18;
  bool datamover_mm2s_error = 19;
  bool datamover_s2mm_error = 20;
  bool frame_statistics_alignment_err = 21;
  bool frame_statistics_tlast_err = 22;
  bool frame_statistics_work_req_err = 23;
  uint64 slowest_head = 24;
  bool qsfp_module_present = 25;

  double fpga_temp_degC      = 26;
  double current_edge_12V_A  = 27;
  double voltage_edge_12V_V  = 28;
  double current_edge_3p3V_A = 29;
  double voltage_edge_3p3V_V = 30;

  uint64 pcie_h2c_descriptors = 31;
  uint64 pcie_c2h_descriptors = 32;
  uint64 pcie_h2c_beats       = 33;
  uint64 pcie_c2h_beats       = 34;

  uint64 pcie_h2c_status      = 35;
  uint64 pcie_c2h_status      = 36;
}

message IndexerDataProcessingPlots {
  Plot indexing_rate = 1;
}

message DataProcessingSettings {
  double signal_to_noise_threshold = 1;  // STRONG_PIXEL in XDS
  int64 photon_count_threshold = 2;      // Threshold in photon counts
  int64 min_pix_per_spot = 3;            // Minimum pixels per spot
  int64 max_pix_per_spot = 4;            // Maximum pixels per spot
  int64 local_bkg_size = 5;              // NBX/NBY parameter
  optional double high_resolution_limit = 6;
  optional double low_resolution_limit = 7;
  double bkg_estimate_low_q = 8;
  double bkg_estimate_high_q = 9;
}

message PreviewFrame {
  int64 image_number = 1;
  int64 total_images = 2;
  double wavelength_A = 3;
  double beam_x_pxl = 4;
  double beam_y_pxl = 5;
  double detector_distance_mm = 6;
  int64 saturation_value = 7;
  string file_prefix = 8;
  int64 width = 9;
  int64 height = 10;
  int64 pixel_depth = 11;
  reserved 12;
  bytes data = 13;
}

// Indexer
message SpotFinderImageOutput {
  int64 image_number = 1;
  repeated Vector coord = 3;
}

message IndexerStatus {
  int64 images_analyzed = 1;
  int64 images_indexed = 2;
}

message IndexerInput {
  optional UnitCell unit_cell = 1;
  int64 space_group_number = 2;
  string zmq_recv_pub_addr = 3;
  int64 bin_size = 4;
}

message IndexerImageOutput {
  int64 image_number = 1;
  int64 spot_count = 2;
  bool indexed = 3;
  optional UnitCell unit_cell = 4;
}

message IndexerOutput {
  repeated IndexerImageOutput image_output = 1;
  double ms_per_image = 2;
  int64 indexed_images = 3;
}

// Broker

message ModuleStatistics {
  int64 module_number = 1;
  int64 storage_cell_number = 2;

  double pedestal_g0_mean = 3;
  double pedestal_g1_mean = 4;
  double pedestal_g2_mean = 5;

  double pedestal_rms_g0_mean = 6;
  double pedestal_rms_g1_mean = 7;
  double pedestal_rms_g2_mean = 8;

  uint64 masked_pixels = 9;
}

message Image {
  bytes data = 1;
  int64 width = 2;
  int64 height = 3;
  int64 pixel_depth = 4;
}

message MaskToLoad {
  repeated uint32 mask = 1;
  int32 bit_to_set = 2;
}

message MeasurementStatistics {
  string file_prefix = 1;
  int64 images_collected = 2;
  int64 max_image_number_sent = 3;
  double collection_efficiency = 4;
  double compression_ratio = 5;

  bool cancelled = 6;
  int64 max_receive_delay = 7;

  optional double writer_performance_MBs = 8;
  optional int64 images_written = 9;

  optional double indexing_rate = 10;
  optional double indexing_performance_ms = 11;

  int64 detector_width = 12;
  int64 detector_height = 13;
  int64 detector_pixel_depth = 14;
}

message BrokerStatus {
  State broker_state = 1;
  optional double progress = 2;
  optional double indexing_rate = 3;
}

message BrokerPlots {
  Plot bkg_estimate = 1;
  Plot radial_int_profile = 2;
  Plot spot_count = 3;
  Plot indexing_rate = 4;
}

message BrokerFullStatus {
  ReceiverOutput receiver = 1;
  DetectorOutput detector = 2;
  repeated WriterOutput writer = 3;
  IndexerOutput indexer = 4;
}

service gRPC_JFJochReceiver {
  rpc Start (ReceiverInput) returns (Empty) {}
  rpc Abort (Empty) returns (Empty) {}
  rpc Cancel (Empty) returns (Empty) {}
  rpc Stop (Empty) returns (ReceiverOutput) {}
  rpc GetStatus (Empty) returns (ReceiverStatus) {}
  rpc SetDataProcessingSettings(DataProcessingSettings) returns (Empty) {}
  rpc GetDataProcessingPlots(Empty) returns (ReceiverDataProcessingPlots) {}
  rpc GetPreviewFrame (Empty) returns (PreviewFrame) {}
  rpc GetNetworkConfig (Empty) returns (ReceiverNetworkConfig) {}
}

service gRPC_JFJochWriter {
  rpc Start (WriterInput) returns (Empty) {}
  rpc Abort (Empty) returns (Empty) {}
  rpc Stop (Empty) returns (WriterOutput) {}
  rpc WriteMasterFile (WriterMetadataInput) returns (Empty) {}
}

service gRPC_JFJochDetector {
  rpc Start (DetectorInput) returns (Empty) {}
  rpc Stop (Empty) returns (Empty) {}
  rpc Status (Empty) returns (DetectorStatus) {}
  rpc On (DetectorConfig) returns (Empty) {}
  rpc Off (Empty) returns (Empty) {}
  rpc Trigger (Empty) returns (Empty) {}
}

service gRPC_JFJochIndexer {
  rpc Start (IndexerInput) returns (Empty) {}
  rpc Stop (Empty) returns (IndexerOutput) {}
  rpc GetStatus (Empty) returns (IndexerStatus) {}
  rpc GetDataProcessingPlots(Empty) returns (IndexerDataProcessingPlots) {}
}